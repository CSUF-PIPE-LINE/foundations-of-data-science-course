---
title: "Summarizing Multiple-Variable Relationships"
format: revealjs
editor: visual
execute:
  echo: TRUE
---

## Steps 1 and 2: Load Packages and Import Data

```{r}
#| label: load packages 
library(tidyverse) 
```

```{r}
#| label: import data with here
alz <- readr::read_csv(here::here("Data", "alzheimers.csv"))

alz <- alz |>
  mutate(sex = factor(sex, labels = c("female", "male")),
         cognition = if_else(
        mmse >= 24, # condition
        "Normal", # value if condition is true
        "Impaired" # value if condition is false
    ))
```

## Why Do We Care?

-   Often the relationship between two variables depends on a *third* variable

    -   In statistics, we call this an *interaction effect*
  
-   When doing our exploratory analysis, we like to look for interaction effects

    -   Gives us better ideas for how to model our data

## Three-Way Tables for Three Categorical Variables

```{r}
#| label: summarize 3 categorical variables

three_var_table <- alz |>
  group_by(diagnosis, sex, cognition) |>
  count()

print(three_var_table)
```

-   Category combinations with 0 observations are not shown

## Getting Conditional Proportions with Three-Way Tables

```{r}
#| label: cond props 3 categorical variables-2

three_var_table |>
  group_by(diagnosis) |> # regroup
  mutate(pct = n/sum(n)*100)
```

## More Conditional Proportions with Three-Way Tables

```{r}
#| label: cond props 3 categorical variables-3

three_var_table |>
  group_by(diagnosis, sex) |> # regroup by 2 variables
  mutate(pct = n/sum(n)*100)
```

## One Numerical, Two Categorical Variables

- We can make summaries grouped by both variables

```{r}
#| label: 1 num 2 cat table-1

alz |>
  group_by(diagnosis, sex) |>
  summarize(
    mean_wmv = mean(wmv),
    sd_wmv = sd(wmv)
  )
```

## Alternative Syntax

```{r}
#| label: 1 num 2 cat table-2
#| code-line-numbers: "5"
alz |>
  summarize(
    mean_wmv = mean(wmv),
    sd_wmv = sd(wmv),
    .by = c(diagnosis, sex)
  )
```

## Graphing One Numerical, Two Categorical with Boxplots

::: columns
::: {.column width="55%"}
```{r}
#| label: 1 num 2 cat boxplots-1
#| echo: TRUE
#| eval: FALSE
ggplot(data = alz,
       mapping = aes(
         # numerical variable must be x or y
         x = sex,
         y = wmv, 
         fill = diagnosis
       )) +
    labs(x = "Sex",
       y = "White Matter Volume (cc)") +
  geom_boxplot() +
  scale_x_discrete(labels = c("Female", "Male")) +
  scale_fill_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 1 num 2 cat boxplots-2
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         # numerical variable must be x or y
         x = sex,
         y = wmv, 
         fill = diagnosis
       )) +
    labs(x = "Sex",
       y = "White Matter Volume (cc)") +
  geom_boxplot() +
  scale_x_discrete(labels = c("Female", "Male")) +
  scale_fill_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::

## Graphing Two Numerical, One Categorical Variable with Scatterplots

::: columns
::: {.column width="55%"}
```{r}
#| label: 2 num 1 cat scatterplots-1
#| echo: TRUE
#| eval: FALSE
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 2 num 1 cat scatterplots-2
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::


## Linear Trends Within Groups

::: columns
::: {.column width="55%"}
```{r}
#| label: 2 num 1 cat scatterplots-3
#| echo: TRUE
#| eval: FALSE
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 2 num 1 cat scatterplots-4
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         # numerical variable must be x or y
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::

## Nonlinear Trends Within Groups

::: columns
::: {.column width="55%"}
```{r}
#| label: 2 num 1 cat scatterplots-5
#| echo: TRUE
#| eval: FALSE
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  geom_smooth(method = "loess", se = FALSE) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 2 num 1 cat scatterplots-6
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         # numerical variable must be x or y
         x = age,
         y = wmv, 
         color = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  geom_smooth(method = "loess", se = FALSE) +
  scale_color_manual(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"), 
                    values = c("red4","red")) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::

## Three Numerical Variables

- Easiest to map `color` to a numerical variable

::: columns
::: {.column width="55%"}
```{r}
#| label: 3 num scatterplots-1
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "10-11"
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = mmse
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  scale_color_continuous(name = "MMSE Score") +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 3 num scatterplots-2
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = mmse
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  scale_color_continuous(name = "MMSE Score") +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::

## Making Multiple Variable Visualizations Effective

-   Use visual grouping principles to make insights "pop"

    -   Play around with different variable-to-attribute mappings
    
-   Accommodate for differences in perception

    - Use the `viridis` color palettes to accommodate color-blind viewers or black-and-white printing
    
    - Represent categories using shapes instead of colors
    
    - For printing, consider using `theme_minimal` to remove all the gray background
    
## Adjusting for Perception Differences

::: columns
::: {.column width="55%"}
```{r}
#| label: 2 num 1 cat scatterplots-7
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "11-18"
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis,
         shape = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  theme_minimal() + # add this before changing things
  scale_color_viridis_d(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"),
                    option = "turbo") +
  scale_shape_manual(
    values = c(16, 17),
    guide = "none" # don't include a legend
  ) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::

::: {.column width="45%"}
```{r}
#| label: 2 num 1 cat scatterplots-8
#| echo: FALSE
#| eval: TRUE
#| fig-height: 8
ggplot(data = alz,
       mapping = aes(
         x = age,
         y = wmv, 
         color = diagnosis,
         shape = diagnosis
       )) +
    labs(x = "Age (years)",
       y = "White Matter Volume (cc)") +
  geom_point(size = 2) +
  theme_minimal() + # add this before changing things
  scale_color_viridis_d(name = "Diagnosis",
                    labels = c("Alzheimer's", "Normal"),
                    option = "turbo") +
  scale_shape_manual(
    values = c(16, 17),
    guide = "none" # don't include a legend
  ) +
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 24),
    legend.text = element_text(size = 16) 
  )
```
:::
:::
